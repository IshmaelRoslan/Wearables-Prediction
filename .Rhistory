library(tidyverse)
train <-
read_csv(
"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv",
na = c("", "NA", "#DIV/0!")
)
test <-
read_csv(
"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv",
na = c("", "NA", "#DIV/0!")
)
training <-
train %>%
mutate(
datetime = lubridate::dmy_hms(train$cvtd_timestamp),
across(where(is.logical), as.numeric),
new_window = str_replace(new_window, "no", "FALSE"),
new_window = str_replace(new_window, "yes", "TRUE"),
new_window = as.logical(new_window)
) %>%
select(-c(raw_timestamp_part_1, raw_timestamp_part_2, cvtd_timestamp))
testing <-
test %>%
mutate(
datetime = lubridate::dmy_hms(test$cvtd_timestamp),
across(where(is.logical), as.numeric),
new_window = str_replace(new_window, "no", "FALSE"),
new_window = str_replace(new_window, "yes", "TRUE"),
new_window = as.logical(new_window)
) %>%
select(-c(raw_timestamp_part_1, raw_timestamp_part_2, cvtd_timestamp))
wear_folds <-
vfold_cv(training, v = 5, strata = classe)
library(tidymodels)
tidymodels_prefer()
wear_folds <-
vfold_cv(training, v = 5, strata = classe)
wear_rec <-
recipe(classe ~ ., data = training) %>%
update_role("...1", new_role = "id") %>%
step_filter_missing(all_predictors(), threshold = 0.1) %>%
step_nzv(all_numeric()) %>%
step_corr(all_numeric()) %>%
step_rm(c("...1", "user_name", "new_window", "num_window", "datetime")) %>%
step_normalize(all_predictors()) %>%
prep()
rf_spec <-
rand_forest(trees = 1000) %>%
set_engine("ranger") %>%
set_mode("classification")
tree_spec <-
boost_tree() %>%
set_engine("xgboost") %>%
set_mode("classification")
knn_spec <-
nearest_neighbor() %>%
set_engine("kknn") %>%
set_mode("classification")
wear_models <-
workflow_set(
preproc = list(wear_rec),
models = list(rf =  rf_spec,
xgb = tree_spec,
knn = knn_spec),
cross = TRUE
)
doParallel::registerDoParallel()
set.seed(1690)
wear_rs <-
wear_models %>%
workflow_map("fit_resamples",
resamples = wear_folds,
metrics = metric_set(accuracy, kap))
wear_rs %>%
unnest(result) %>%
unnest(.metrics) %>%
group_by(wflow_id, .metric) %>%
summarise(estimate = mean(.estimate))
#Choose Random Forests
tune_spec <-
rand_forest(mtry = tune(),
trees = 1000,
min_n = tune()) %>%
set_engine("ranger") %>%
set_mode("classification")
tune_wf <- workflow() %>%
add_recipe(wear_rec) %>%
add_model(tune_spec)
doParallel::registerDoParallel()
set.seed(1690)
tune_res <-
tune_grid(tune_wf,
resamples = wear_folds,
grid  = 10)
tune_res %>%
collect_metrics() %>%
filter(.metric == "accuracy") %>%
select(mean, min_n, mtry) %>%
pivot_longer(min_n:mtry,
values_to = "value",
names_to = "parameter") %>%
ggplot(aes(mtry, mean, color = parameter)) +
geom_point(show.legend =  F) +
facet_wrap( ~ parameter, scales = "free_x")
tune_res
tune_res %>%
collect_metrics()
tune_res %>%
collect_metrics() %>%
filter(.metric == "accuracy") %>%
select(mean, min_n, mtry) %>%
pivot_longer(min_n:mtry,
values_to = "value",
names_to = "parameter")
tune_res %>%
collect_metrics() %>%
filter(.metric == "accuracy") %>%
select(mean, min_n, mtry) %>%
pivot_longer(min_n:mtry,
values_to = "value",
names_to = "parameter") %>%
ggplot(aes(value, mean, color = parameter)) +
geom_point(show.legend =  F) +
facet_wrap( ~ parameter, scales = "free_x")
rf_grid <-
grid_regular(mtry(range = c(10, 20)),
min_n(range = c(2, 10)),
levels = 5)
rf_grid
set.seed(1690)
regular_res <-
tune_grid(tune_wf,
resamples = wear_folds,
grid  = rf_grid)
regular_res %>%
collect_metrics() %>%
filter(.metric == "accuracy") %>%
mutate(min_n = factor(min_n)) %>%
ggplot(aes(mtry, mean, color = min_n)) +
geom_line(alpha = 0.5, size = 1.5) +
geom_point()
regular_res %>%
collect_metrics() %>%
filter(.metric == "roc_auc") %>%
mutate(min_n = factor(min_n)) %>%
ggplot(aes(mtry, mean, color = min_n)) +
geom_line(alpha = 0.5, size = 1.5) +
geom_point()
rf_grid <-
grid_regular(mtry(range = c(15, 15)),
min_n(range = c(2, 5)),
levels = 5)
set.seed(1690)
regular_res <-
tune_grid(tune_wf,
resamples = wear_folds,
grid  = rf_grid)
regular_res %>%
collect_metrics() %>%
#filter(.metric == "roc_auc") %>%
mutate(min_n = factor(min_n)) %>%
ggplot(aes(mtry, mean, color = min_n)) +
geom_line(alpha = 0.5, size = 1.5) +
geom_point() +
facet_wrap(~ parameter)
regular_res %>%
collect_metrics() %>%
#filter(.metric == "roc_auc") %>%
mutate(min_n = factor(min_n))
regular_res %>%
collect_metrics() %>%
pivot_wider(names_from = ".metric", values_from = "mean")
regular_res %>%
collect_metrics()
regular_res %>%
collect_metrics() %>%
select(mtry:.metric,mean)
regular_res %>%
collect_metrics() %>%
select(mtry:.metric,mean)
pivot_wider(names_from = ".metric", values_from = "mean") %>%
mutate(min_n = factor(min_n)) %>%
ggplot(aes(mtry, mean, color = min_n)) +
geom_line(alpha = 0.5, size = 1.5) +
geom_point() +
facet_wrap(~ parameter)
regular_res %>%
collect_metrics() %>%
select(mtry:.metric,mean) %>%
pivot_wider(names_from = ".metric", values_from = "mean") %>%
mutate(min_n = factor(min_n)) %>%
ggplot(aes(mtry, mean, color = min_n)) +
geom_line(alpha = 0.5, size = 1.5) +
geom_point() +
facet_wrap(~ parameter)
regular_res %>%
collect_metrics() %>%
select(mtry:.metric,mean) %>%
pivot_wider(names_from = ".metric", values_from = "mean") %>%
mutate(min_n = factor(min_n))
regular_res %>%
collect_metrics() %>%
select(mtry:.metric,mean)
regular_res %>%
collect_metrics() %>%
select(mtry:.metric,mean) %>%
mutate(min_n = factor(min_n)) %>%
ggplot(aes(mtry, mean, color = min_n)) +
geom_line(alpha = 0.5, size = 1.5) +
geom_point() +
facet_wrap(~ .metric)
regular_res %>%
collect_metrics() %>%
select(mtry:.metric,mean) %>%
mutate(min_n = factor(min_n)) %>%
ggplot(aes(mtry, mean, color = min_n)) +
geom_line(alpha = 0.5, size = 1.5) +
geom_point()
regular_res %>%
collect_metrics() %>%
select(mtry:.metric,mean) %>%
mutate(min_n = factor(min_n)) %>%
ggplot(aes(mtry, mean, color = min_n)) +
geom_line(alpha = 0.5, size = 1.5) +
geom_point() +
facet_wrap(.metric~)
regular_res %>%
collect_metrics() %>%
select(mtry:.metric,mean) %>%
mutate(min_n = factor(min_n)) %>%
ggplot(aes(mtry, mean, color = min_n)) +
geom_line(alpha = 0.5, size = 1.5) +
geom_point() +
facet_wrap(.metric~)
regular_res %>%
collect_metrics() %>%
select(mtry:.metric,mean) %>%
mutate(min_n = factor(min_n)) %>%
ggplot(aes(mtry, mean, color = min_n)) +
geom_line(alpha = 0.5, size = 1.5) +
geom_point()
regular_res %>%
collect_metrics() %>%
select(mtry:.metric,mean) %>%
mutate(min_n = factor(min_n)) %>%
ggplot(aes(mtry, mean, color = min_n)) +
geom_line(alpha = 0.5, size = 1.5) +
geom_point() +
facet_wrap(~.metric)
rf_grid <-
grid_regular(mtry(range = c(5, 15)),
min_n(range = c(2, 5)),
levels = 20)
rf_grid
rf_grid <-
grid_regular(mtry(range = c(5, 15)),
min_n(range = c(2, 5)),
levels = 40)
rf_grid <-
grid_regular(mtry(range = c(6, 15)),
min_n(range = c(2, 5)),
levels = 40)
rf_grid
set.seed(1690)
tune_res %>%
collect_metrics() %>%
filter(.metric == "accuracy") %>%
select(mean, min_n, mtry) %>%
pivot_longer(min_n:mtry,
values_to = "value",
names_to = "parameter") %>%
ggplot(aes(value, mean, color = parameter)) +
geom_point(show.legend =  F) +
facet_wrap( ~ parameter, scales = "free_xy")
tune_res %>%
collect_metrics() %>%
filter(.metric == "accuracy") %>%
select(mean, min_n, mtry) %>%
pivot_longer(min_n:mtry,
values_to = "value",
names_to = "parameter") %>%
ggplot(aes(value, mean, color = parameter)) +
geom_point(show.legend =  F) +
facet_wrap( ~ parameter, scales = "free")
regular_res %>%
collect_metrics() %>%
select(mtry:.metric,mean) %>%
mutate(min_n = factor(min_n)) %>%
ggplot(aes(mtry, mean, color = min_n)) +
geom_line(alpha = 0.5, size = 1.5) +
geom_point() +
facet_wrap(~.metric, scales = "free")
regular_res <-
tune_grid(tune_wf,
resamples = wear_folds,
grid  = rf_grid)
regular_res %>%
collect_metrics() %>%
select(mtry:.metric,mean) %>%
mutate(min_n = factor(min_n)) %>%
ggplot(aes(mtry, mean, color = min_n)) +
geom_line(alpha = 0.5, size = 1.5) +
geom_point() +
facet_wrap(~.metric, scales = "free")
regular_res %>%
collect_metrics() %>%
select(mtry:.metric,mean) %>%
ggplot(aes(mtry, min_n, fill = mean)) +
geom_tile() +
facet_wrap(~.metric, scales = "free")
regular_res %>%
collect_metrics() %>%
select(mtry:.metric,mean) %>%
mutate(min_n = factor(min_n)) %>%
ggplot(aes(mtry, mean, color = min_n)) +
geom_line(alpha = 0.5, size = 1.5) +
geom_point() +
facet_wrap(~.metric, scales = "free")
best_acc <- select_best(regular_res, "roc_auc")
best_acc
final_rf <- finalize_model(tune_spec,
best_acc)
library(vip)
final_rf %>%
set_engine("ranger", importance = "permutation") %>%
fit(classe ~ .,
data = juice(wear_rec) %>% select(-"...1")) %>%
vip(geom = "point")
vip(geom = "point")
final_rf %>%
set_engine("ranger", importance = "permutation") %>%
fit(classe ~ .,
data = juice(wear_rec)
final_rf %>%
set_engine("ranger", importance = "permutation") %>%
fit(classe ~ .,
data = juice(wear_rec)) %>%
vip(geom = "point")
Construct a
```{r}
rf_grid <-
grid_regular(mtry(range = c(6, 15)),
min_n(range = c(2, 5)),
levels = 40)
knitr::opts_chunk$set(cache = TRUE, warning = FALSE,
message = FALSE, echo = TRUE, dpi = 180,
fig.width = 6, fig.height = 4)
regular_res %>%
collect_metrics() %>%
select(mtry:.metric,mean) %>%
mutate(min_n = factor(min_n)) %>%
ggplot(aes(mtry, mean, color = min_n)) +
geom_line(alpha = 0.5, size = 1.5) +
geom_point() +
facet_wrap(~.metric, scales = "free")
knitr::opts_chunk$set(cache = TRUE, warning = FALSE,
message = FALSE, echo = TRUE, dpi = 180,
fig.width = 8, fig.height = 5)
regular_res %>%
collect_metrics() %>%
select(mtry:.metric,mean) %>%
mutate(min_n = factor(min_n)) %>%
ggplot(aes(mtry, mean, color = min_n)) +
geom_line(alpha = 0.5, size = 1.5) +
geom_point() +
facet_wrap(~.metric, scales = "free")
best_acc <- select_best(regular_res, "roc_auc")
best_acc
final_rf <- finalize_model(tune_spec,
best_acc)
The parameters which provide the best auc metric are mtry = `r best_auc[mtry]` and min_n = `r best_auc[min_n]`
best_auc[mtry]
best_auc <- select_best(regular_res, "roc_auc")
final_rf <- finalize_model(tune_spec,
best_acc)
best_auc[mtry]
best_auc[1]
as.character(best_auc[1])
regular_res %>%
collect_metrics()
regular_res %>%
collect_metrics(best_auc)
regular_res %>%
select_best()
regular_res %>%
filter(select_best())  %>%
collect_metrics()
regular_res %>%
show_best("roc_auc")
regular_res %>%
show_best("roc_auc")[1]
regular_res %>%
show_best("roc_auc") %>%
top_n(1)
regular_res %>%
show_best("roc_auc") %>%
top_n()
regular_res %>%
show_best("roc_auc") %>%
top_n("mean")
regular_res %>%
show_best("roc_auc") %>%
top_n(1,"mean")
regular_res %>%
show_best("roc_auc") %>%
top_n(1,mean)
regular_res %>%
show_best() %>%
top_n(1,mean)
regular_res %>%
collect_metrics()
regular_res %>%
select_best()
regular_res %>%
select_best() %>%
pull(.config)
regular_res
regular_res %>% collect_metrics()
regular_res %>%
collect_metrics() %>%
filter(.config == best_model_id)
best_model_id <-
regular_res %>%
select_best() %>%
pull(.config)
regular_res %>%
collect_metrics() %>%
filter(.config == best_model_id)
regular_res %>%
collect_metrics() %>%
filter(.config == best_model_id) %>%
select(-n:.config)
regular_res %>%
collect_metrics() %>%
filter(.config == best_model_id) %>%
select(-(n:.config))
regular_res %>%
collect_metrics() %>%
filter(.config == best_model_id) %>%
select(mtry:.metric, mean)
regular_res %>%
collect_metrics() %>%
filter(.config == best_model_id) %>%
select(mtry:.metric, mean) %>%
pivot_wider(names_from = ".metric", values_from = "mean")
final_fit <-
final_rf %>%
set_engine("ranger", importance = "permutation") %>%
fit(classe ~ .,
data = juice(wear_rec))
final_fit %>%
predict(data = testing)
predict(data = testing)
final_fit
predict(final_fit, testing)
predict(final_fit,testing)
tune_res %>%
collect_metrics() %>%
filter(.metric == "roc_auc") %>%
select(mean, min_n, mtry) %>%
pivot_longer(min_n:mtry,
values_to = "value",
names_to = "parameter") %>%
ggplot(aes(value, mean, color = parameter)) +
geom_point(show.legend =  F) +
facet_wrap( ~ parameter, scales = "free")
tune_res %>%
collect_metrics() %>%
filter(.metric == "roc_auc") %>%
select(mean, min_n, mtry) %>%
pivot_longer(min_n:mtry,
values_to = "value",
names_to = "parameter") %>%
ggplot(aes(value, mean, color = parameter)) +
geom_point(show.legend =  F) +
geom_line() +
facet_wrap( ~ parameter, scales = "free")
tune_res %>%
collect_metrics() %>%
filter(.metric == "roc_auc") %>%
select(mean, min_n, mtry) %>%
pivot_longer(min_n:mtry,
values_to = "value",
names_to = "parameter") %>%
ggplot(aes(value, mean, color = parameter)) +
geom_point(show.legend =  F) +
geom_line(alpha = 0.5, size = 1.5) +
facet_wrap( ~ parameter, scales = "free")
best_auc[2]
